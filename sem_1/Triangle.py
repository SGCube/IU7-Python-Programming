"""
Задачи программы:
- Определить длины сторон треугольника по заданным координатам
- Найти высоту, проведённую из наибольшего угла треугольника
- Определить, является ли треугольник равнобедренным
- Определить, лежит ли точка M (с заданными координатами) внутри треугольника.
- Если точка M лежит внутри треугольника, то найти расстояние от точки M
до ближайшей стороны треугольника или её продолжения
- Проверить существование тругольника

Автор: Сорокин Антон, группа ИУ7-12Б

xa, ya - координаты точки A
xb, yb - координаты точки B
xc, yc - координаты точки C
ab, ac, bc - длины сторон AB, AC, BC соответсвенно
max_angle - наибольший угол треугольника (значения 'A', 'B', 'C')
s - рабочая переменная
h - высота из наибольшего угла треугольника
x, y - координаты некоторой точки M
r_ab, r_ac, r_bc - расстояния от точки M до сторон AB, AC, BC
a, b, c - рабочие переменные (коэффициенты в уравнении прямой)

"""
from math import sqrt

xa, ya = map(float, input('Введите координаты точки A: ').split(' '))
xb, yb = map(float, input('Введите координаты точки B: ').split(' '))
xc, yc = map(float, input('Введите координаты точки C: ').split(' '))

ab = sqrt((xb-xa)**2 + (yb-ya)**2)
ac = sqrt((xc-xa)**2 + (yc-ya)**2)
bc = sqrt((xc-xb)**2 + (yc-yb)**2)

s = (ab+ac+bc)/2 #вычисление полупериметра
s = sqrt(s*(s-ab)*(s-ac)*(s-bc)) #вычисление площади по формуле Герона

if (ab == 0) and (ac == 0) and (bc == 0):
    print('\nТреугольник не существует: получена точка')
elif s == 0:
    print('\nТреугольник не существует: получена прямая')
else:
    print('\nТреугольник существует')
    
    print('\nДлина стороны AB: {:7.4f}'.format(ab))
    print('Длина стороны AC: {:7.4f}'.format(ac))
    print('Длина стороны BC: {:7.4f}'.format(bc))

    #Нахождение наибольшего угла и высоты, опущенной из его вершины
    max_angle = 'A'
    if ab > ac:
        max_angle = 'C'
    elif ac > bc:
        max_angle = 'B'

    if max_angle == 'A':
        h = 2*s/bc
    elif max_angle == 'B':
        h = 2*s/ac
    else:
        h = 2*s/ab        
    print('\nВысота из наибольшего угла(%s): '%(max_angle),'{:7.4f}'.format(h))

    #Проверка на равнобедренный треугольник
    if ab == bc == ac:
        print('\nТреугольник равнобедренный (AB = BC = AC)')
    elif ab == bc:
        print('\nТреугольник равнобедренный (AB = BC)')
    elif ab == ac:
        print('\nТреугольник равнобедренный (AB = AC)')
    elif ac == bc:
        print('\nТреугольник равнобедренный (AC = BC)')
    else:
        print('\nТреугольник не является равнобедренным')

    x,y = map(float, input('\nВведите координаты точки M: ').split(' '))

    #Нахождение расстояния от точки M до стороны AB с точностью до знака
    a = yb - ya
    b = xa - xb
    r_ab = (a * (xa - x) + b * (ya - y))/sqrt(a*a+b*b)

    #Нахождение расстояния от точки M до стороны AC с точностью до знака
    a = yc - ya
    b = xa - xc
    r_ac = -(a * (xc - x) + b * (yc - y))/sqrt(a*a+b*b)

    #Нахождение расстояния от точки M до стороны BC с точностью до знака
    a = yc - yb
    b = xb - xc
    r_bc = (a * (xb - x) + b * (yb - y))/sqrt(a*a+b*b)

    #Определение расстояния от точки M до ближайшей стороны
    if (r_ab == 0) or (r_ac == 0) or (r_bc == 0) or (
        r_ab/abs(r_ab) == r_ac/abs(r_ac) == r_bc/abs(r_bc)):
        print('\nТочка M лежит внутри треугольника')
        r_ab = abs(r_ab)
        r_ac = abs(r_ac)
        r_bc = abs(r_bc)
        if r_ab < r_ac:
            if r_ab < r_bc:
                print('Ближайшая сторона к точке M: AB')
                print('Расстояние до стороны AB: {:7.4f}'.format(r_ab))
            elif r_ab == r_bc:
                print('Ближайшие стороны: AB и BC (точка M равноудалена)')
                print('Расстояние до сторон: {:7.4f}'.format(r_ab))
            else:
                print('Ближайшая сторона к точке M: BC')
                print('Расстояние до стороны BC: {:7.4f}'.format(r_bc))
        elif r_ab == r_ac:
            if r_ab < r_bc:
                print('Ближайшие стороны: AB и AC (точка M равноудалена)')
                print('Расстояние до сторон: {:7.4f}'.format(r_ab))
            elif r_ab == r_bc:
                print('Точка M равноудалена от всех сторон')
                print('Расстояние до сторон: {:7.4f}'.format(r_ab))
            else:
                print('Ближайшая сторона к точке M: BC')
                print('Расстояние до стороны BC: {:7.4f}'.format(r_bc))
        else:
            if r_ac < r_bc:
                print('Ближайшая сторона к точке M: AC')
                print('Расстояние до стороны AC: {:7.4f}'.format(r_ac))
            elif r_ac == r_bc:
                print('Ближайшие стороны: AC и BC (точка M равноудалена)')
                print('Расстояние до сторон: {:7.4f}'.format(r_ac))
            else:
                print('Ближайшая сторона к точке M: BC')
                print('Расстояние до стороны BC: {:7.4f}'.format(r_bc))    
    else:
        print('\nТочка M лежит вне треугольника')
